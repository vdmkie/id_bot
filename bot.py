import os
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# === –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å –µ–≥–æ –≤ Render ‚Üí Environment ‚Üí Environment Variables.")

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID.\n"
        "–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ –∏–ª–∏ –≤ —Ç–æ–ø–∏–∫–µ, –∏ —è –ø—Ä–∏—à–ª—é ID."
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ===
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    msg = update.message

    reply_text = (
        f"üìå Chat title: {chat.title}\n"
        f"üí¨ Chat ID: {chat.id}\n"
        f"üë§ User: {msg.from_user.full_name} ({msg.from_user.id})\n"
        f"‚úâÔ∏è Message: {msg.text}\n"
    )

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ ‚Äî –ø–æ–∫–∞–∂–µ–º –µ–≥–æ ID
    if msg.message_thread_id:
        reply_text += f"\nüßµ Topic ID: {msg.message_thread_id}"

    await msg.reply_text(reply_text)

# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.ALL, message_handler))

    app.run_polling()

if __name__ == "__main__":
    main()
