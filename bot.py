import os
import logging
import asyncio
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render ‚Üí Environment ‚Üí TELEGRAM_TOKEN)
TOKEN = os.getenv("TELEGRAM_TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ–ø–∞–¥–∞–µ—Ç –≤ Render Logs)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# === –•–µ–Ω–¥–ª–µ—Ä –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat = update.effective_chat
    msg = update.message

    # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    reply_text = (
        f"üìå Chat title: {chat.title}\n"
        f"üí¨ Chat ID: {chat.id}\n"
        f"üë§ User: {msg.from_user.full_name} ({msg.from_user.id})\n"
        f"‚úâÔ∏è Message: {msg.text}\n"
    )

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ ‚Üí –¥–æ–±–∞–≤–ª—è–µ–º ID —Ç–æ–ø–∏–∫–∞
    if msg.message_thread_id:
        reply_text += f"üßµ Topic ID: {msg.message_thread_id}"

    # –û—Ç–≤–µ—á–∞–µ–º –≤ —Ç–æ–º –∂–µ —á–∞—Ç–µ / —Ç–æ–ø–∏–∫–µ
    await msg.reply_text(reply_text)

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async def main():
    if not TOKEN:
        raise RuntimeError("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–¥–∞–π –µ–≥–æ –≤ Render!")

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(TOKEN).build()

    # –õ–æ–≤–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏ —Ç–µ–∫—Å—Ç, –∏ –º–µ–¥–∏–∞, –∏ –≤ —Ç–æ–ø–∏–∫–∞—Ö)
    app.add_handler(MessageHandler(filters.ALL, message_handler))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await app.run_polling()

# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    asyncio.run(main())
